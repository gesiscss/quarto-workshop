{
  "hash": "7719a3a75d05c09a4af79ae60d5b443b",
  "result": {
    "markdown": "---\ntitle: \"Academic paper\"\nauthor: \"Chung-hong Chan\"\nlesson: 7\ninstitute: GESIS\ndate: \"2023-06-20\"\ndate-format: \"YYYY-MM-DD\"\nfooter: \"[Automated Reports & Co with Quarto and Markdown](https://gesiscss.github.io/quarto-workshop/)\"\nformat:\n  html:\n    toc: false\n---\n\n\n# Anatomy of an academic paper\n\nSimply put, a (reproducible) academic paper is a single `qmd` file with the following:\n\n* Standardized format (APA, PLOS, etc.)\n* Citation / Bibliography (APA, Harvard, etc. Usually the same as the format)\n* Figures and tables (hopefully generated from computation) and cross-referencing them (Table 1, Figure 1 etc.)\n\nThe major advantage of Quarto is to standardize all three (rather than doing them manually, when any of these things is to be changed).\n\nThe file format required is usually PDF or Microsoft Word.\n\n# Standardized format\n\nThere are templates (as Quarto extensions) available ([Official list](https://quarto.org/docs/journals/), some other: [APA7](https://github.com/wjschne/apaquarto), [arXiv](https://github.com/mikemahoney218/quarto-arxiv), [CCR](https://github.com/ccr-journal/ccr-quarto)).\n\n## Activity\n\n**Q:**Suppose you want to use the *Journal of Statistical Software* extension (`quarto-journals/jss`), Applying your knowledge from Session 5 and Session 6, how to initialize a project?\n\n\n**A:**\n\n```bash\n## suppose we want the paper to be in a directory `mypaper`\nquarto use template quarto-journals/jss\ncd mypaper\nls\n```\n\n## Immediate render\n\nIn general, it is a good idea to immediate render the default article to check whether the template requires external R and/or LaTeX packages.\n\n```bash\nquarto render mypaper.qmd\n```\n\nThe template (`mypaper.qmd` in this case) usually contains important information on how to write a paper with it. I usually keep it until a point I don't need that information anymore.\n\nLet's get our hands dirty\n\n## Exercise\n\nEdit the YAML Front Matter so that:\n\n1. You and a person you'd like to collaborate with are the authors\n2. Edit the title to a paper you'd like to write\n3. Write a few sentences in the abstract\n4. Change the keywords and running head\n\nAnd render. And now you have your own JSS paper... ish.\n\n# Citation\n\nQuarto uses BibTeX to handle citation. By default, this JSS template looks for `bibliography.bib`. But you can change that in the YAML.\n\nA BibTeX file is a plain-text file with BibTeX entries. You can keep track of your bibliographic library using external tools (Zotero or whatnot). This workshop is not about bibliography management, so we will manage the BibTeX file manually.\n\nSuppose you want to cite [this paper](https://doi.org/10.1177/20501579231176678) (you should). You need to have the BibTeX entry of this paper. The BibTeX entry of the paper is like this:\n\n```bibtex\n@article{schoch2023software,\n  title={Software presentation: Rtoot: Collecting and Analyzing Mastodon Data},\n  author={Schoch, David and Chan, Chung-hong},\n  journal={Mobile Media \\& Communication},\n  pages={20501579231176678},\n  year={2023},\n  publisher={SAGE Publications Sage UK: London, England}\n}\n```\n\nOf course, we can enter this information manually. But the speediest way to obtain this is to search for the title in Google Scholar, click \"Cite\", and then \"BibTeX\" [^1]. Copy and paste the entry into `bibliography.bib` and save.\n\nNow, you can cite the paper. In the BibTeX entry, the first element (`schoch2023software` in the above example) is the cite key of the entry. It is the identifier of an entry and should be unique in a BibTeX file.\n\nIn the body, you can cite a paper using one of the following format:\n\n```markdown\n<!-- Style 1 -->\n\n@schoch2023software develop an R package for collecting Mastodon data.\n\n<!-- Style 2 -->\n\n`rtoot` [@schoch2023software] is an R package for collecting Mastodon data.\n\n<!-- Style 3 -->\n\nMany R packages have been developed to collect social media data [e.g. @schoch2023software].\n\n<!-- Style 4 -->\n\n@schoch2023software [p.1] state that \"Mastodon will become increasingly more relevant for communication scholars.\"\n\n```\n\n## Exercise 1\n\nTry out all four styles and explain to me what are the differences between the four.\n\n## Exercise 2\n\nFind this paper: \"rtweet: Collecting and analyzing Twitter data\" by Kearney, and cite it in the following sentence instead.\n\n```markdown\nMany R packages have been developed to collect social media data [e.g. @schoch2023software].\n```\n\n## Exercise 3\n\nThe syntax for citing multiple papers is: `[@citekey1;@citekey2]`. Try to cite both Schoch & Chan and Kearney in the above sentence.\n\n# tables, figures and cross referencing\n\nRecalling yesterday, we can create tables and figures with code chunk.\n\n````markdown\n```{{r}}\n#| echo: false\n#| tbl-cap: Some outdated car data\nknitr::kable(mtcars)\n```\n````\n\nWe can do the same in your paper too. The tricky part is to cross-reference the generated content. You can cross-reference them manually (e.g. typing exactly \"Table 2\"), but there is a better way.\n\n````markdown\n\n@tbl-mtchars shows some outdated car data.\n\n```{{r}}\n#| label: tbl-mtcars\n#| echo: false\n#| tbl-cap: Some outdated car data\nknitr::kable(mtcars)\n```\n````\n\nQuarto takes care of code chunks labeled with `tbl-` and `fig-`.\n\n## Exercise 1\n\nCreate a code chunk to generate the histogram and cross-reference it.\n\n## Labeling non-computational parts\n\nIt's better to download the image file.\n\n```markdown\n*Felis catus* (@fig-cat) does not have nine lives. @tbl-cats shows the number of lives of three known cats.\n\n![A picture of Felis catus](Cat_August_2010-4.jpg){#fig-cat}\n\n| Cat           | Number of lives |\n|---------------|-----------------|\n| Hello Kitty   | 1               |\n| Felix the cat | 1               |\n| Garfield      | 1               |\n\n: List of known cats and their number of lives {#tbl-cats}\n\n```\n\n# Debrief\n\n*Q:* How to display `x` as a table?\n\n*A:* The way to answer this kind of questions is to find a way to make `x` a data frame. Chances are, you can either use `as.data.frame()` or `broom::tidy()` for that. Whether or not it's pretty is another issue.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod <- glm(mpg ~ wt + cyl, data = mtcars)\nknitr::kable(broom::tidy(mod))\n```\n\n::: {.cell-output-display}\n|term        |  estimate| std.error| statistic|   p.value|\n|:-----------|---------:|---------:|---------:|---------:|\n|(Intercept) | 39.686262| 1.7149840| 23.140893| 0.0000000|\n|wt          | -3.190972| 0.7569065| -4.215808| 0.0002220|\n|cyl         | -1.507795| 0.4146883| -3.635972| 0.0010643|\n:::\n:::\n\n\n<!-- *Q:* I want to submit my preprint to arXiv. -->\n\n<!-- *A:* Well, you must keep the LaTeX source code (default). -->\n\n<!-- ```yaml -->\n<!-- format: -->\n<!--   arxiv-pdf: -->\n<!--     keep-tex: true -->\n<!-- ``` -->\n\n<!-- But you can't just upload the latex source code. You also need to upload the BibTeX file, and the two `.sty` files. -->\n\n*Q:* I am tired of JSS. I want to submit it to an Elsevier journal.\n\n*A:* No!\n\n*Q:* Okay. How about PLOS One? You did that too, right?\n\n*A:* Okay... Changing a template can be dangerous. Please backup first (or use version control).\n\n```sh\nquarto install extension quarto-journals/plos\n```\n\nYou can test that with\n\n```sh\nquarto render myarticle.qmd --to plos-pdf\n```\n\nYou will need to edit the in-text citations (PLOS One does not use author names). You can change that permanently by changing the YAML.\n\n```yaml\nformat:\n  plos-pdf:\n    keep-tex: true\n```\n\n*Q:* I want to submit my paper to ICA. I need my paper in APA7.\n\n*A:* An experimental [Quarto APA7 template](https://github.com/wjschne/apaquarto) is available. But please make sure you read carefully how it works. In particular, it doesn't use `tbl-` and `fig-` labels for cross-referencing.\n\n*Q:* Why don't you teach the visual editor of RStudio? It's great!\n\n*A:* I agree. It can even support citing papers from your Zotero library. But I want you to understand the mechanism.\n\n\n[^1]: Using this method, the entry has no DOI. But again, this session is not about bibliography management. If you really want to have the DOI, the best way is to use [crossref meta search](https://search.crossref.org/). But that's super sluggish. Also, you need to manually edit the obtained entries sometimes.\n",
    "supporting": [
      "07_paper_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}