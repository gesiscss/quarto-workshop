[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Automated Reports & Co with Quarto and Markdown",
    "section": "",
    "text": "Lecturers\nDavid Schoch\nTeam lead for “Transparent Social Analytics” in the Department for Computational Social Science at GESIS in Cologne\n \nChung-hong Chan\nSenior Researcher in the team “Transparent Social Analytics” in the Department for Computational Social Science at GESIS in Cologne\n \nAbout the course\nCreating professionally looking scientific reports and papers are recurring tasks for social scientists - and often time-consuming. This workshop introduces Quarto and the associated Markdown-based systems for generating automated reports using literate programming techniques to facilitate this process. Literate programming is the paradigm of combining code, its output, and its interpretation in a single document. For example, one can embed scripts for data analysis in R or Python in a Quarto file to generate tables and figures reproducibly. This allows to create fully reproducible, beautiful documents with little effort. In this course, we will cover the basics of writing automated reports with Quarto, as well as academic-specific topics such as bibliography generation and collaborative writing with non-technical individuals. Additionally, we will cover how Quarto can be used to create high-quality presentations and webpages, such as a personal page or for a project.\nSchedule\nday 1:\n09:00 – 10:30: Introduction to literate programming and setting up Quarto\n10:30 – 10:45: Coffee break\n10:45 – 12:15: Writing your first Quarto document: Introduction to Markdown Syntax\n12:15 – 13:45: Lunch break\n13:45 – 15:15: Literate programming: Combining Markdown and R / Python\n15:15 – 15:30: Coffee break\n15:30 – 17:00: Exporting to different formats\nday 2:\n09:00 – 10:30: Let’s make a presentation with Quarto\n10:30 – 10:45: Coffee break\n10:45 – 12:15: Let’s make a website with Quarto\n12:15 – 13:45: Lunch break\n13:45 – 15:15: Let’s write an academic paper with Quarto\n15:15 – 15:30: Coffee break\n15:30 – 17:00: Q&A\nSoftware\n\nA text editor, e.g. RStudio, VS Code\nR\nQuarto"
  },
  {
    "objectID": "material/slides/06_websites.html#websites-with-quarto",
    "href": "material/slides/06_websites.html#websites-with-quarto",
    "title": "Let’s make a website with Quarto",
    "section": "Websites with Quarto",
    "text": "Websites with Quarto\n\nWebsites are essentially format: html + a Quarto Project\nWebsites and books are actually very similar (in the Quarto sense) since they assemble multiple pages into one resource"
  },
  {
    "objectID": "material/slides/06_websites.html#why-not-wordpress-tumblr-medium.com-blogger.com-etc",
    "href": "material/slides/06_websites.html#why-not-wordpress-tumblr-medium.com-blogger.com-etc",
    "title": "Let’s make a website with Quarto",
    "section": "Why not WordPress, Tumblr, Medium.com, Blogger.com, etc?",
    "text": "Why not WordPress, Tumblr, Medium.com, Blogger.com, etc?\n\nNo R Markdown support (even math support is often nonexistent or awkward)\nHuge benefits of static websites compared to dynamic websites\n\nall static files, no PHP or databases, no login/password, work everywhere (even offline)\ntypically fast to visit (no computation needed on the server side), and easy to speed up via CDN\n\n\n\n\ntaken from https://slides.yihui.org/2017-rmarkdown-UNL-Yihui-Xie.html#36"
  },
  {
    "objectID": "material/slides/06_websites.html#create-a-website-project",
    "href": "material/slides/06_websites.html#create-a-website-project",
    "title": "Let’s make a website with Quarto",
    "section": "Create a website project",
    "text": "Create a website project\nCreate a website:\nquarto create-project MySiteName --type website\n\nCreate a blog:\nquarto create-project MyBlogName --type website:blog\n\n\nCreate a book:\nquarto create-project mybook --type book\n\n\nIn RStudio: New Project &gt; [Quarto Website/Quarto Blog/Quarto Book]\nAlso support in VS Code"
  },
  {
    "objectID": "material/slides/06_websites.html#creating-a-website",
    "href": "material/slides/06_websites.html#creating-a-website",
    "title": "Let’s make a website with Quarto",
    "section": "Creating a website",
    "text": "Creating a website\n$ quarto create-project MyWebsite --type website\nCreating project at /home/david/Documents/tmp/MyWebsite:\n  - Created _quarto.yml\n  - Created index.qmd\n  - Created about.qmd\n  - Created styles.css"
  },
  {
    "objectID": "material/slides/06_websites.html#navigation-structure",
    "href": "material/slides/06_websites.html#navigation-structure",
    "title": "Let’s make a website with Quarto",
    "section": "Navigation & Structure",
    "text": "Navigation & Structure\n\n\n\nFile\nDescription\n\n\n\n\n_quarto.yml\nQuarto project file.\n\n\nindex.qmd\nlanding page.\n\n\nabout.qmd\nwebsite about page.\n\n\nstyles.css\nCustom CSS for website"
  },
  {
    "objectID": "material/slides/06_websites.html#the-project-file-_quarto.yml",
    "href": "material/slides/06_websites.html#the-project-file-_quarto.yml",
    "title": "Let’s make a website with Quarto",
    "section": "The project file _quarto.yml",
    "text": "The project file _quarto.yml\nthis is where you customize the overall appearance and preferences\nproject:\n  type: website\n\nwebsite:\n  title: \"MyWebsite\"\n  navbar:\n    left:\n      - href: index.qmd\n        text: Home\n      - about.qmd\n\nformat:\n  html:\n    theme: cosmo\n    css: styles.css\n    toc: true"
  },
  {
    "objectID": "material/slides/06_websites.html#themes",
    "href": "material/slides/06_websites.html#themes",
    "title": "Let’s make a website with Quarto",
    "section": "Themes",
    "text": "Themes\nhttps://quarto.org/docs/output-formats/html-themes.html\ndefault, cerulean, cosmo, cyborg, darkly, flatly, journal, litera, lumen, lux, materia, minty, morph, pulse, quartz, sandstone, simplex, sketchy, slate, solar, spacelab, superhero, united, vapor, yeti, zephyr\n\nor create your own\nformat:\n  html:\n    theme: custom.scss\n    css: styles.css\n    toc: true\nvery similar to customizing presentations!"
  },
  {
    "objectID": "material/slides/06_websites.html#possibilities-are-endless",
    "href": "material/slides/06_websites.html#possibilities-are-endless",
    "title": "Let’s make a website with Quarto",
    "section": "Possibilities are endless",
    "text": "Possibilities are endless\n\nMy personal website\nThis Workshop\nA serious project\nA not so serious project"
  },
  {
    "objectID": "material/slides/06_websites.html#customize-customize-customize",
    "href": "material/slides/06_websites.html#customize-customize-customize",
    "title": "Let’s make a website with Quarto",
    "section": "customize, customize, customize",
    "text": "customize, customize, customize\n_quarto.yml\nproject:\n  type: website\n\nwebsite:\n  site-url: \"https://mr.schochastics.net\"\n  title: \"schochastics\"\n  favicon: \"static/favicon.png\"\n  twitter-card:\n    creator: \"@schochastics\"\n    site: \"@schochastics\"\n    description: \"I’m the team lead for Transparent Social Analytics in the Department for Computational Social Science at GESIS and I develop tools in R.\"\n    image: \"static/img/avatar.png\"\n    card-style: \"summary\"\n  search: false\n  open-graph: \n    site-name: schochastics\n    description: \"I’m the team lead for Transparent Social Analytics in the Department for Computational Social Science at GESIS and I develop tools in R.\"\n    image: \"static/img/avatar.png\"\n  navbar:\n    logo: \"static/logo.png\"\n    title: false\n    background: primary\n    right:\n      - href: publications/index.qmd\n        text: Publications\n      - href: http://blog.schochastics.net\n        text: Blog\n      - href: project/index.qmd\n        text: Projects\n      - href: material/index.qmd\n        text: Material\n      - href: about/index.qmd\n        text: About me\n  page-footer:\n    left: \"© 2022 David Schoch\"\n    center: \"powered by [quarto](https://quarto.org)\"\n    right:\n      - icon: twitter\n        href: https://twitter.com/schochastics\n      - icon: github\n        href: https://github.com/schochastics\n      - text: &lt;i class=\"ai ai-google-scholar\" role=\"img\"&gt;&lt;/i&gt;\n        href: https://scholar.google.de/citations?user=MFlgHdcAAAAJ&hl=en\n      - text: &lt;i class=\"ai ai-orcid\" role=\"img\"&gt;&lt;/i&gt;\n        href: https://orcid.org/0000-0003-2952-4812\n      - text: &lt;i class=\"bi bi-mastodon\"&gt;&lt;/i&gt;\n        href: https://fosstodon.org/@schochastics\n\nformat:\n  html:\n    theme: \n      - cosmo\n      - custom.scss\n    css: \n      - styles.css\n      - academicons.css\n    toc: true\nexecute: \n  freeze: auto"
  },
  {
    "objectID": "material/slides/06_websites.html#customize-customize-customize-1",
    "href": "material/slides/06_websites.html#customize-customize-customize-1",
    "title": "Let’s make a website with Quarto",
    "section": "customize, customize, customize",
    "text": "customize, customize, customize\ncustom.scss\n/*-- scss:defaults --*/\n$body-bg: #333333 !default;\n$body-color: #9EEBCF;\n$link-color: white;\n$font-family-sans-serif: 'IBM Plex Sans';\n$font-family-monospace: 'IBM Plex Sans';\n\n$navbar-bg: #333333;\n$navbar-fg: #9EEBCF;\n$navbar-hl: #9EEBCF;\n\n/*-- scss:rules --*/\n@font-face {\n    font-family: 'Nova Square';\n    src: url('static/fonts/novasquare-regular-webfont.woff2') format('woff2'),\n         url('static/fonts/novasquare-regular-webfont.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n\n}\n\n@font-face {\n    font-family: 'IBM Plex Sans';\n    src: url('static/fonts/IBMPlexSans-Regular.woff2') format('woff2'),\n        url('static/fonts/IBMPlexSans-Regular.woff') format('woff');\n    font-weight: normal;\n    font-style: normal;\n}\n\n@media screen and (min-width: 56em) {\n  html {\n    font-size: 1.1em;\n  }\n}"
  },
  {
    "objectID": "material/slides/06_websites.html#customize-customize-customize-2",
    "href": "material/slides/06_websites.html#customize-customize-customize-2",
    "title": "Let’s make a website with Quarto",
    "section": "customize, customize, customize",
    "text": "customize, customize, customize\nstyles.css\n/* css styles */\ndiv.sourceCode{\n  background-color: black;\n}\n\n\nh1,h2,h3,h4{\n  font-family: 'Nova Square';\n}\n\n.listing-title{\n  color: white;\n  text-decoration: underline;\n  font-weight: 700;\n}\n\npre{\n  border: 1px solid white;\n  color: var(--navbar-fg);\n  padding: 5px 5px 5px 5px;\n}\n\ncode{\n  color: var(--navbar-fg);\n}\n\n/* inline code */\n.post-body&gt;p&gt;code{\n  background-color: rgba(255,255,255,.1);\n}\n\na.btn-links:hover{\n  background-color: rgba(255,255,255,.1)!important;\n}\n\n.habout{\n  font-size: 3rem;\n  font-family: 'Nova Square';\n  font-weight: 700;\n}\n\nh1,h2,h4{\n  font-weight: 700;\n}\n\nh4.f4{\n  font-size: 1.75rem;\n}\n\nh1.f3{\n  font-weight: 700;\n}\n\n/* navbar kink */\n@media screen and (min-width: 999px) {\n  .navbar .navbar-nav .nav-link {\n    color: #9EEBCF;\n    font-size: 1rem;\n    text-transform: uppercase;\n  }\n  .navbar .navbar-nav .nav-link:hover {\n    color: #9EEBCF;\n  }\n  .navbar .navbar-nav .nav-item {\n    position: relative;\n  }\n  .navbar .navbar-nav .nav-item::after {\n    position: absolute;\n    bottom: 0;\n    left: 0;\n    right: 0;\n    margin: auto;\n    background-color: #ffd700;\n    width: 0%;\n    content: \"\";\n    height: 1px;\n    transition: all 0.5s;\n  }\n  \n.navbar .navbar-nav .nav-item:hover::after {\n    width: 100%;\n  }\n}\n\n.navbar-brand&gt;img {\n    max-height: 48px;\n    width: auto;\n    padding-right: 6px;\n}\n\n.nav-footer a{\n  color: #9EEBCF;\n}\n\n.active {\n  border-bottom: 1px solid #ffd700;\n}\n\n.navbar-brand {\n    position: relative;\n    width: 170px;\n    left: 15px;\n    background-size: contain;\n}\n\n/*footer*/\n.nav-footer{\n  border-top: 0px !important;\n}\n\n/*buttons*/\n\n.btn-outline-success{\n  border-color: #9EEBCF;\n  background-color: transparent;\n}\n\n.btn-outline-success:hover{\n  border-color: white;\n  background-color: #666666;\n}\n\n.btn-outline-success a{\n  text-decoration: none;\n  text-transform: uppercase;\n}\n\n/* grid cards */\n.card-body{\n  background-color: #333333;\n}\n\n.card-img-top{\n  background-color: #333333;\n  width: 80%;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.borderless{\n  background-color: #333333;\n}\n\n.quarto-grid-item img.thumbnail-image {\n    object-fit: contain;\n}\n\n.thumbnail-image:hover{\n  opacity:75%;\n}\n\n.center{\n   text-align: center;\n}\n\ndiv.column.col-v-center{\n   vertical-align: middle;\n}\n\n.home-title{\n  font-size: 2em;\n}\n\n.socials{\n  padding-top: 0.5em;\n  padding-bottom: 1em;\n}\n\n.socials a{\n  color: #9EEBCF;\n  margin-left: 0.5em;\n}"
  },
  {
    "objectID": "material/slides/06_websites.html#adding-an-about-page",
    "href": "material/slides/06_websites.html#adding-an-about-page",
    "title": "Let’s make a website with Quarto",
    "section": "Adding an About page",
    "text": "Adding an About page\n---\ntwitter-card:\n    image: images/profile-preview.png\n    creator: \"@schochastics\"\nopen-graph: true\ntitle: \"David Schoch\"\nimage: images/profile-preview.png\nabout:\n    template: trestles\n    links:\n    - icon: twitter\n        text: Twitter\n        href: https://twitter.com/schochastics\n    - icon: github\n        text: Github\n        href: https://github.com/schochastics\n---"
  },
  {
    "objectID": "material/slides/06_websites.html#about-page-templates",
    "href": "material/slides/06_websites.html#about-page-templates",
    "title": "Let’s make a website with Quarto",
    "section": "About page templates",
    "text": "About page templates\nabout:\n  template: trestles\n\njollatrestlessolanamarqueebroadside"
  },
  {
    "objectID": "material/slides/06_websites.html#publishing",
    "href": "material/slides/06_websites.html#publishing",
    "title": "Let’s make a website with Quarto",
    "section": "Publishing",
    "text": "Publishing\n(not limited to websites)\nThere are many ways to publish Quarto websites. Since rendered content uses standard formats (HTML, PDFs, etc.) it can be published anywhere. Additionally, there is a quarto publish command available for easy publishing to popular services (GitHub, Netlify, Posit Connect, etc.)\n\nas well as various tools to make it easy to publish from a Continuous Integration (CI) system."
  },
  {
    "objectID": "material/slides/06_websites.html#interlude-ci",
    "href": "material/slides/06_websites.html#interlude-ci",
    "title": "Let’s make a website with Quarto",
    "section": "Interlude: CI",
    "text": "Interlude: CI\nContinuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run.\n\nIn simpler terms:\nInstead of rendering your website and uploading the new version, CI allows to simply “push” code to a repository and the website is automatically updated"
  },
  {
    "objectID": "material/slides/06_websites.html#publishing-with-github",
    "href": "material/slides/06_websites.html#publishing-with-github",
    "title": "Let’s make a website with Quarto",
    "section": "Publishing with GitHub",
    "text": "Publishing with GitHub\nGitHub Pages enables you to publish websites based on a GitHub repository.\n\nThere are three publishing options from Quarto:\n\nRender sites on your local machine to the docs directory, check the rendered site into GitHub, and then configure your GitHub repo to publish from the docs directory.\nUse the quarto publish command to publish content rendered on your local machine.\nUse a GitHub Action to automatically render your files (a single Quarto document or a Quarto project) and publish the resulting content whenever you push a source code change to your repository."
  },
  {
    "objectID": "material/slides/06_websites.html#using-ci-with-ga",
    "href": "material/slides/06_websites.html#using-ci-with-ga",
    "title": "Let’s make a website with Quarto",
    "section": "Using CI with GA",
    "text": "Using CI with GA\n(assuming your website source code is checked into GitHub)\n\nfreeze computations (add to _quarto.yml)\n\n\nexecute:\n  freeze: auto\n\n(re)render\n\n$ quarto render\n\npublish locally\n\n$ quarto publish gh-pages\n\nadd .github/workflows/publish.yml with this content\ncommit and push"
  },
  {
    "objectID": "material/slides/06_websites.html#section",
    "href": "material/slides/06_websites.html#section",
    "title": "Let’s make a website with Quarto",
    "section": "",
    "text": "you only need to do this once\n\n(going forward, only step 5 is needed)"
  },
  {
    "objectID": "material/slides/05_presentations.html#quarto-presentation-formats",
    "href": "material/slides/05_presentations.html#quarto-presentation-formats",
    "title": "Let’s make a presentation with Quarto",
    "section": "Quarto presentation formats",
    "text": "Quarto presentation formats\n\nrevealjs essentially the replacement for xaringan\nbeamer for LaTex slides\nPowerpoint for when you have no choice…"
  },
  {
    "objectID": "material/slides/05_presentations.html#what-is-revealjs",
    "href": "material/slides/05_presentations.html#what-is-revealjs",
    "title": "Let’s make a presentation with Quarto",
    "section": "What is revealjs?",
    "text": "What is revealjs?\n\nreveal.js is an open source HTML presentation framework. It’s a tool that enables anyone with a web browser to create fully-featured and beautiful presentations for free.\n\n\nThere is an R package for RMarkdown\ninstall.packages(\"revealjs\")\nbut it is rarely used since xaringan (based on knitr and remark.js, no Pandoc) is more popular"
  },
  {
    "objectID": "material/slides/05_presentations.html#no-need-to-learn-new-syntax",
    "href": "material/slides/05_presentations.html#no-need-to-learn-new-syntax",
    "title": "Let’s make a presentation with Quarto",
    "section": "No need to learn new syntax",
    "text": "No need to learn new syntax\n---\nformat: revealjs\n---\n\n## Slide 1\nAdd some content\n\n## Slide 2\n- and \n- maybe\n- a \n- list\nRender to pptx? set format: pptx\nRender to beamer? set format: beamer\n\n\nSwitching between formats is THAT easy as long as you do not have any “fancy” features included"
  },
  {
    "objectID": "material/slides/05_presentations.html#html-divs-and-spans-with-pandoc",
    "href": "material/slides/05_presentations.html#html-divs-and-spans-with-pandoc",
    "title": "Let’s make a presentation with Quarto",
    "section": "HTML divs and spans with Pandoc",
    "text": "HTML divs and spans with Pandoc\n::: {.class}\nContent in a div with a class\n:::\n\nSome text with a specific [span]{.span-class}\nPandoc translates this to\n&lt;div class=\"class\"&gt;\n   Content in a div with a class\n&lt;/div&gt;\nSome text with a specific &lt;span class=\"span-class\"&gt;span&lt;/span&gt;"
  },
  {
    "objectID": "material/slides/05_presentations.html#incremental-lists",
    "href": "material/slides/05_presentations.html#incremental-lists",
    "title": "Let’s make a presentation with Quarto",
    "section": "Incremental lists",
    "text": "Incremental lists\n:::{.incremental}\n- item 1\n- item 2\n- item 3\n:::\n\n\nitem 1\nitem 2\nitem 3"
  },
  {
    "objectID": "material/slides/05_presentations.html#incremental-slides",
    "href": "material/slides/05_presentations.html#incremental-slides",
    "title": "Let’s make a presentation with Quarto",
    "section": "Incremental Slides",
    "text": "Incremental Slides\nUse . . . syntax\nThis appears first \n\n. . .\n\nThis second\n\n\nThis appears first\n\n\nThis second"
  },
  {
    "objectID": "material/slides/05_presentations.html#fragments-basics",
    "href": "material/slides/05_presentations.html#fragments-basics",
    "title": "Let’s make a presentation with Quarto",
    "section": "Fragments, Basics",
    "text": "Fragments, Basics\n\n::: {.fragment}\nFade in\n:::\n\n::: {.fragment .fade-out}\nFade out\n:::\n\n::: {.fragment .highlight-red}\nHighlight red\n:::\n\n::: {.fragment .fade-in-then-out}\nFade in, then out\n:::\n\n::: {.fragment .fade-up}\nSlide up while fading in\n:::"
  },
  {
    "objectID": "material/slides/05_presentations.html#fragments-basics-1",
    "href": "material/slides/05_presentations.html#fragments-basics-1",
    "title": "Let’s make a presentation with Quarto",
    "section": "Fragments, Basics",
    "text": "Fragments, Basics\n\nFade in\n\n\nFade out\n\n\nHighlight red\n\n\nFade in, then out\n\n\nSlide up while fading in"
  },
  {
    "objectID": "material/slides/05_presentations.html#fragments-more",
    "href": "material/slides/05_presentations.html#fragments-more",
    "title": "Let’s make a presentation with Quarto",
    "section": "Fragments, More",
    "text": "Fragments, More\nThis is an important sentence!\nThis is an [important sentence!]{.fragment .highlight-red}\n\n\n\nFade in &gt; Turn red &gt; Semi fade out\n\n\n\n\n::: {.fragment .fade-in}\n::: {.fragment .highlight-red}\n::: {.fragment .semi-fade-out}\nFade in &gt; Turn red &gt; Semi fade out\n:::\n:::\n:::"
  },
  {
    "objectID": "material/slides/05_presentations.html#slide-transition",
    "href": "material/slides/05_presentations.html#slide-transition",
    "title": "Let’s make a presentation with Quarto",
    "section": "Slide Transition",
    "text": "Slide Transition\n\nfade\n\n\n\n## Slide Transition {transition=\"fade\"}"
  },
  {
    "objectID": "material/slides/05_presentations.html#slide-transition-1",
    "href": "material/slides/05_presentations.html#slide-transition-1",
    "title": "Let’s make a presentation with Quarto",
    "section": "Slide Transition",
    "text": "Slide Transition\n\nslide\n\n\n\n## Slide Transition {transition=\"slide\"}"
  },
  {
    "objectID": "material/slides/05_presentations.html#slide-transition-2",
    "href": "material/slides/05_presentations.html#slide-transition-2",
    "title": "Let’s make a presentation with Quarto",
    "section": "Slide Transition",
    "text": "Slide Transition\n\nconvex\n\n\n\n## Slide Transition {transition=\"convex\"}"
  },
  {
    "objectID": "material/slides/05_presentations.html#slide-transition-3",
    "href": "material/slides/05_presentations.html#slide-transition-3",
    "title": "Let’s make a presentation with Quarto",
    "section": "Slide Transition",
    "text": "Slide Transition\n\nconcave\n\n\n\n## Slide Transition {transition=\"concave\"}"
  },
  {
    "objectID": "material/slides/05_presentations.html#slide-transition-4",
    "href": "material/slides/05_presentations.html#slide-transition-4",
    "title": "Let’s make a presentation with Quarto",
    "section": "Slide Transition",
    "text": "Slide Transition\n\nzoom\n\n\n\n## Slide Transition {transition=\"zoom\"}"
  },
  {
    "objectID": "material/slides/05_presentations.html#slide-transition-global",
    "href": "material/slides/05_presentations.html#slide-transition-global",
    "title": "Let’s make a presentation with Quarto",
    "section": "Slide Transition, global",
    "text": "Slide Transition, global\n---\ntitle: \"Presentation\"\nformat:\n  revealjs:\n    transition: slide\n    background-transition: fade\n    transition-speed: fast\n---"
  },
  {
    "objectID": "material/slides/05_presentations.html#column-layout",
    "href": "material/slides/05_presentations.html#column-layout",
    "title": "Let’s make a presentation with Quarto",
    "section": "Column layout",
    "text": "Column layout\n:::: {.columns}\n\n::: {.column width=\"40%\"}\nLeft column\n:::\n\n::: {.column width=\"60%\"}\nRight column\n:::\n\n::::\n\n\nLeft column\n\nRight column"
  },
  {
    "objectID": "material/slides/05_presentations.html#column-layout-1",
    "href": "material/slides/05_presentations.html#column-layout-1",
    "title": "Let’s make a presentation with Quarto",
    "section": "Column layout",
    "text": "Column layout\n\n\n\n```{r}\n#| eval: false\ndplyr::glimpse(mtcars)\n```\n\n\n\n\nRows: 32\nColumns: 11\n$ mpg  &lt;dbl&gt; 21.0, 21.0, 22.8, 21.4, 18.7, 18.1, 14.3, 24.4, 22.8, 19.2, 17.8,…\n$ cyl  &lt;dbl&gt; 6, 6, 4, 6, 8, 6, 8, 4, 4, 6, 6, 8, 8, 8, 8, 8, 8, 4, 4, 4, 4, 8,…\n$ disp &lt;dbl&gt; 160.0, 160.0, 108.0, 258.0, 360.0, 225.0, 360.0, 146.7, 140.8, 16…\n$ hp   &lt;dbl&gt; 110, 110, 93, 110, 175, 105, 245, 62, 95, 123, 123, 180, 180, 180…\n$ drat &lt;dbl&gt; 3.90, 3.90, 3.85, 3.08, 3.15, 2.76, 3.21, 3.69, 3.92, 3.92, 3.92,…\n$ wt   &lt;dbl&gt; 2.620, 2.875, 2.320, 3.215, 3.440, 3.460, 3.570, 3.190, 3.150, 3.…\n$ qsec &lt;dbl&gt; 16.46, 17.02, 18.61, 19.44, 17.02, 20.22, 15.84, 20.00, 22.90, 18…\n$ vs   &lt;dbl&gt; 0, 0, 1, 1, 0, 1, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 0,…\n$ am   &lt;dbl&gt; 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 0, 0,…\n$ gear &lt;dbl&gt; 4, 4, 4, 3, 3, 3, 3, 4, 4, 4, 4, 3, 3, 3, 3, 3, 3, 4, 4, 4, 3, 3,…\n$ carb &lt;dbl&gt; 4, 4, 1, 1, 2, 1, 4, 2, 2, 4, 4, 3, 3, 3, 4, 4, 4, 1, 2, 1, 1, 2,…"
  },
  {
    "objectID": "material/slides/05_presentations.html#output-location-column-fragment",
    "href": "material/slides/05_presentations.html#output-location-column-fragment",
    "title": "Let’s make a presentation with Quarto",
    "section": "Output location, column-fragment",
    "text": "Output location, column-fragment\n\n\n```{r}\n#| output-location: column-fragment\n#| code-line-numbers: \"|2\"\n\nlibrary(ggplot2)\n\nmtcars |&gt; \n  ggplot(aes(x = disp, y = mpg)) +\n  geom_point() +\n  geom_smooth(method = \"loess\", formula = \"y~x\")\n```"
  },
  {
    "objectID": "material/slides/05_presentations.html#output-location-column",
    "href": "material/slides/05_presentations.html#output-location-column",
    "title": "Let’s make a presentation with Quarto",
    "section": "Output location, column",
    "text": "Output location, column\n\n\n```{r}\n#| output-location: column\n#| code-line-numbers: \"|2\"\n\nlibrary(ggplot2)\n\nmtcars |&gt; \n  ggplot(aes(x = disp, y = mpg)) +\n  geom_point() +\n  geom_smooth(method = \"loess\", formula = \"y~x\")\n```"
  },
  {
    "objectID": "material/slides/05_presentations.html#output-location-fragment",
    "href": "material/slides/05_presentations.html#output-location-fragment",
    "title": "Let’s make a presentation with Quarto",
    "section": "Output location, fragment",
    "text": "Output location, fragment\n\n```{r}\n#| output-location: fragment\n#| code-line-numbers: \"|2\"\n\nlibrary(ggplot2)\n\nmtcars |&gt; \n  ggplot(aes(x = disp, y = mpg)) +\n  geom_point() +\n  geom_smooth(method = \"loess\", formula = \"y~x\")\n```"
  },
  {
    "objectID": "material/slides/05_presentations.html#output-location-slide",
    "href": "material/slides/05_presentations.html#output-location-slide",
    "title": "Let’s make a presentation with Quarto",
    "section": "Output location, slide",
    "text": "Output location, slide\n\n```{r}\n#| output-location: slide\n#| code-line-numbers: \"|2\"\n\nlibrary(ggplot2)\n\nmtcars |&gt; \n  ggplot(aes(x = disp, y = mpg)) +\n  geom_point() +\n  geom_smooth(method = \"loess\", formula = \"y~x\")\n```"
  },
  {
    "objectID": "material/slides/05_presentations.html#output-location-slide-output",
    "href": "material/slides/05_presentations.html#output-location-slide-output",
    "title": "Let’s make a presentation with Quarto",
    "section": "Output location, slide",
    "text": "Output location, slide"
  },
  {
    "objectID": "material/slides/05_presentations.html#code-line-highlighting",
    "href": "material/slides/05_presentations.html#code-line-highlighting",
    "title": "Let’s make a presentation with Quarto",
    "section": "Code line-highlighting",
    "text": "Code line-highlighting\nUse #| code-line-numbers: \"3\" syntax - will highlight line 3 and fade others\n\n\n```{r}\n#| output-location: column\n#| code-line-numbers: \"3\"\n\nlibrary(ggplot2)\n\nmtcars |&gt; \n  ggplot(aes(x = disp, y = mpg)) +\n  geom_point() +\n  geom_smooth(method = \"loess\", formula = \"y~x\")\n```"
  },
  {
    "objectID": "material/slides/05_presentations.html#code-line-highlighting-1",
    "href": "material/slides/05_presentations.html#code-line-highlighting-1",
    "title": "Let’s make a presentation with Quarto",
    "section": "Code line-highlighting",
    "text": "Code line-highlighting\nwith a “fragment style”\n\n\n```{r}\n#| output-location: column\n#| code-line-numbers: \"|3\"\n\nlibrary(ggplot2)\n\nmtcars |&gt; \n  ggplot(aes(x = disp, y = mpg)) +\n  geom_point() +\n  geom_smooth(method = \"loess\", formula = \"y~x\")\n```"
  },
  {
    "objectID": "material/slides/05_presentations.html#code-line-highlighting-2",
    "href": "material/slides/05_presentations.html#code-line-highlighting-2",
    "title": "Let’s make a presentation with Quarto",
    "section": "Code line-highlighting",
    "text": "Code line-highlighting\nhighlight different line ranges progressively\n\n\n```{r}\n#| output-location: column\n#| code-line-numbers: \"|3|5|8|10\"\n\nlibrary(ggplot2)\n\nmtcars |&gt; \n  ggplot(aes(x = disp, y = mpg)) +\n  geom_point() +\n  geom_smooth(method = \"loess\", formula = \"y~x\")\n```"
  },
  {
    "objectID": "material/slides/05_presentations.html#stack-images",
    "href": "material/slides/05_presentations.html#stack-images",
    "title": "Let’s make a presentation with Quarto",
    "section": "Stack images",
    "text": "Stack images"
  },
  {
    "objectID": "material/slides/05_presentations.html#stack-images-1",
    "href": "material/slides/05_presentations.html#stack-images-1",
    "title": "Let’s make a presentation with Quarto",
    "section": "Stack images",
    "text": "Stack images\n::: {.r-stack}\n![](../img/kitten1.jpeg){.fragment width=\"450\"}\n\n![](../img/kitten2.jpeg){.fragment width=\"400\"}\n\n![](../img/kitten3.jpeg){.fragment width=\"300\"}\n:::"
  },
  {
    "objectID": "material/slides/05_presentations.html#background-color-and-image",
    "href": "material/slides/05_presentations.html#background-color-and-image",
    "title": "Let’s make a presentation with Quarto",
    "section": "Background color and image",
    "text": "Background color and image\nBackground color:\n## Background color and image  {background-color=\"red\"} \n\n\nBackground image:\n## Background color and image  {background-image=\"&lt;link-to-image&gt;\"}"
  },
  {
    "objectID": "material/slides/05_presentations.html#themes",
    "href": "material/slides/05_presentations.html#themes",
    "title": "Let’s make a presentation with Quarto",
    "section": "Themes",
    "text": "Themes\nsee https://quarto.org/docs/presentations/revealjs/themes.html\n---\ntitle: \"Presentation\"\nformat:\n  revealjs: \n    theme: dark\n---\n\n---\ntitle: \"Presentation\"\nformat:\n  revealjs: \n    theme: beige\n---\n\n\n---\ntitle: \"Presentation\"\nformat:\n  revealjs: \n    theme: simple\n---"
  },
  {
    "objectID": "material/slides/05_presentations.html#themes-via-custom-sass",
    "href": "material/slides/05_presentations.html#themes-via-custom-sass",
    "title": "Let’s make a presentation with Quarto",
    "section": "Themes via custom SASS",
    "text": "Themes via custom SASS\n---\ntitle: \"Presentation\"\nformat:\n  revealjs: \n    theme: [default,custom.scss]\n---\ncustom.scss:\n/*-- scss:defaults --*/\n\n$body-bg: #191919;\n$body-color: #fff;\n$link-color: #42affa;\n\n/*-- scss:rules --*/\n\n.reveal .slide blockquote {\n  border-left: 3px solid $text-muted;\n  padding-left: 0.5em;\n}"
  },
  {
    "objectID": "material/slides/05_presentations.html#themes-via-extensions",
    "href": "material/slides/05_presentations.html#themes-via-extensions",
    "title": "Let’s make a presentation with Quarto",
    "section": "Themes via Extensions",
    "text": "Themes via Extensions\nInstall Extension (in the folder of your presentation):\nquarto use template gesiscss/quarto-revealjs-fakegesis\n\n\nuse in yaml header:\n---\ntitle: \"Let's make a presentation with Quarto\"\nauthor: \"David Schoch\"\nlesson: 5\ninstitute: GESIS\ndate: \"2023-06-20\"\ndate-format: \"YYYY-MM-DD\"\nfooter: \"[Automated Reports & Co with Quarto and Markdown](https://gesiscss.github.io/quarto-workshop/)\"\nformat: fakegesis-revealjs\n---\n\n\nVery creative themes can be found here"
  },
  {
    "objectID": "material/slides/05_presentations.html#examples",
    "href": "material/slides/05_presentations.html#examples",
    "title": "Let’s make a presentation with Quarto",
    "section": "Examples",
    "text": "Examples"
  },
  {
    "objectID": "material/slides/05_presentations.html#section",
    "href": "material/slides/05_presentations.html#section",
    "title": "Let’s make a presentation with Quarto",
    "section": "",
    "text": "Give me more\n\n\n\n\n\nAutomated Reports & Co with Quarto and Markdown\n\n\nThese slides are based on an RStudio Workshop"
  },
  {
    "objectID": "material/slides/01_introduction.html#section",
    "href": "material/slides/01_introduction.html#section",
    "title": "Introduction to literate programming and setting up Quarto",
    "section": "",
    "text": "“Let us change our traditional attitude to the construction of programs. Instead of imagining that our main task is to instruct a computer what to do, let us concentrate rather on explaining to human beings what we want a computer to do.”  [Donald Knuth]\n\n\nLiterate Programming\nMixing a document formatting language and a programming language."
  },
  {
    "objectID": "material/slides/01_introduction.html#why-use-literate-programming",
    "href": "material/slides/01_introduction.html#why-use-literate-programming",
    "title": "Introduction to literate programming and setting up Quarto",
    "section": "Why use literate programming?",
    "text": "Why use literate programming?\n\n\nEnhanced Readability\nEmphasizes clear and coherent documentation alongside the code\nImproved Documentation\nDocumentation is an integral part of the program\nCode Reusability\nSimpler to extract and adapt code components for use in other projects\nEducation and Learning\ncan serve as an effective educational tool"
  },
  {
    "objectID": "material/slides/01_introduction.html#why-use-literate-programming-as-an-academic",
    "href": "material/slides/01_introduction.html#why-use-literate-programming-as-an-academic",
    "title": "Introduction to literate programming and setting up Quarto",
    "section": "Why use literate programming as an academic?",
    "text": "Why use literate programming as an academic?\n\n\nConvenience\n\n\n\n\nReproducibility"
  },
  {
    "objectID": "material/slides/01_introduction.html#convenience",
    "href": "material/slides/01_introduction.html#convenience",
    "title": "Introduction to literate programming and setting up Quarto",
    "section": "Convenience",
    "text": "Convenience\ncommon academic workflow:\n\nwrite paper in Word, LaTeX, …\n(changing format is tideous)\nanalysis with some software package, “copy” results to paper\n(changing data/code means manually changing tables/figures)\nmake presentation with PowerPoint, LaTeX, …\n\n\n\nliterate programing can unify writing and analysis\n(and Quarto also presenting!)"
  },
  {
    "objectID": "material/slides/01_introduction.html#reproducibility",
    "href": "material/slides/01_introduction.html#reproducibility",
    "title": "Introduction to literate programming and setting up Quarto",
    "section": "Reproducibility",
    "text": "Reproducibility\n(simplified view)\n\ncomplete and self-contained paper that includes both code and documentation\nno need to publish code and data separately"
  },
  {
    "objectID": "material/slides/01_introduction.html#history",
    "href": "material/slides/01_introduction.html#history",
    "title": "Introduction to literate programming and setting up Quarto",
    "section": "History",
    "text": "History\n(focusing on R/Python ecosystems)\nSweave - Early R and Latex integration (2002)\nPandoc - convert between different document formats (2006)\nknitr - convenient extension to Sweave (2012)\nRMarkdown - knitr extension based on Pandoc (~2014)\nJupyter Notebooks - anything with a jupyter kernel (~2014)\nQuarto - Next generation RMarkdown (~2022)"
  },
  {
    "objectID": "material/slides/01_introduction.html#what-is-quarto",
    "href": "material/slides/01_introduction.html#what-is-quarto",
    "title": "Introduction to literate programming and setting up Quarto",
    "section": "What is Quarto?",
    "text": "What is Quarto?\nopen-source scientific and technical publishing system built on Pandoc\n\nQuarto is a command line interface (CLI) that renders plain text formats (.qmd, .rmd, .md) OR mixed formats (.ipynb/Jupyter notebook) into static documents (Word, PDF, HTML,…), websites, presentations, books and much more!\n\n“The concept is to make a major, long term investment in reproducible research, while keeping it compatible with existing formats and adaptable to the various environments users work in.”"
  },
  {
    "objectID": "material/slides/01_introduction.html#working-with-quarto",
    "href": "material/slides/01_introduction.html#working-with-quarto",
    "title": "Introduction to literate programming and setting up Quarto",
    "section": "Working with Quarto",
    "text": "Working with Quarto\nQuarto is independent of R and RStudio\n\nYou can use your favorite editor:\n\nRStudio\nVS Code\nJupyter Lab\nNeovim\nany other text editor + terminal\n\n\n\nBest support for RStudio and VS Code"
  },
  {
    "objectID": "material/slides/01_introduction.html#how-quarto-works",
    "href": "material/slides/01_introduction.html#how-quarto-works",
    "title": "Introduction to literate programming and setting up Quarto",
    "section": "How Quarto works",
    "text": "How Quarto works\n\n\nknitr or jupyter evaluate code and return an md file\nQuarto applies Lua filters + CSS/LaTeX and Pandoc converts to a final ouput format"
  },
  {
    "objectID": "material/slides/01_introduction.html#quarto-vs-rmarkdown",
    "href": "material/slides/01_introduction.html#quarto-vs-rmarkdown",
    "title": "Introduction to literate programming and setting up Quarto",
    "section": "Quarto vs RMarkdown",
    "text": "Quarto vs RMarkdown\nRMarkdown grew into a large ecosystem, with varying syntax.\nBasic: html_document, pdf_document, word_document\nBeamer: beamer_presentation\nPowerPoint: powerpoint_presentation\nHTML Slides: xaringan, ioslides, revealjs\nAdvanced layouts: tufte\nWebsites: blogdown, distill, pagedown\nBooks: bookdown\nJournal Articles: rticles\n Quarto supports (most of) these out of the box"
  },
  {
    "objectID": "material/slides/01_introduction.html#should-i-switch",
    "href": "material/slides/01_introduction.html#should-i-switch",
    "title": "Introduction to literate programming and setting up Quarto",
    "section": "Should I switch?",
    "text": "Should I switch?\nYes:\n\n“Batteries included”, shared syntax\nChoose your own editor and your preferred language\nBetter accessibility and richer features out of the box\nMore enhancements overtime\n\nNo:\n\nRMarkdown will still be maintained\nIf you cherish your workflow"
  },
  {
    "objectID": "material/slides/01_introduction.html#need-convincing",
    "href": "material/slides/01_introduction.html#need-convincing",
    "title": "Introduction to literate programming and setting up Quarto",
    "section": "need convincing?",
    "text": "need convincing?\nInteractive Documents\nShiny, Observable JS, widgets\n\nExtensions\nshortcodes, filters, journal articles, custom formats, revealjs Examples\n\n\nPublishing\nquarto publish (e.g. Github pages) with continuous integration"
  },
  {
    "objectID": "material/02_first_doc.html",
    "href": "material/02_first_doc.html",
    "title": "Markdown",
    "section": "",
    "text": "Literate programming: mixing a document formatting language and a programming language.\nIn this session, we will focus on the document formatting language. And the programming language in the next session."
  },
  {
    "objectID": "material/02_first_doc.html#text-formatting-the-essential",
    "href": "material/02_first_doc.html#text-formatting-the-essential",
    "title": "Markdown",
    "section": "Text formatting (The essential)",
    "text": "Text formatting (The essential)\nText attributes *italic*, **bold**, `monospace`.\n\nHorizontal rule:\n\n---\n\nExercise:\nProduce something like this:\nabcdef\n\n\n\nGood to know\n&gt; \"ego cogito, ergo sum\"\n\n     ego cogito, ergo sum\n\n~~Nothing~~"
  },
  {
    "objectID": "material/02_first_doc.html#headings",
    "href": "material/02_first_doc.html#headings",
    "title": "Markdown",
    "section": "Headings",
    "text": "Headings\n# Heading\n\nGESIS\n\n## Subheading\n\nis\n\n### Alternative heading\n\nwonderful\n\n#### Alternative subheading\n\n*Hello World!*"
  },
  {
    "objectID": "material/02_first_doc.html#lists",
    "href": "material/02_first_doc.html#lists",
    "title": "Markdown",
    "section": "Lists",
    "text": "Lists\n* Item A\n* Item B\n* Item C\n* Item D\n1. Item 1\n2. Item 2\n3. Item 3\n1. Item 1\n2. Item 2\n    * Item 2a\n    * Item 2b\n\nExercises:\nProduce a ranking of cities, e.g.\n\nMannheim\nCologne\nMainz\nKonstanz\n\nList out all the things you ate this morning for breakfast\n\nBlack Coffee\nAir"
  },
  {
    "objectID": "material/02_first_doc.html#links-images",
    "href": "material/02_first_doc.html#links-images",
    "title": "Markdown",
    "section": "Links / Images",
    "text": "Links / Images\n[Github](https://github.com/)\n![cat](https://upload.wikimedia.org/wikipedia/commons/1/15/Cat_August_2010-4.jpg)\n\nGood to know\nAdjusting the size (Quarto)\n![cat](https://upload.wikimedia.org/wikipedia/commons/1/15/Cat_August_2010-4.jpg){width=100}\nReference\nLocal file\n![cat](img/pic.png)\n\n\nExercises:\nProduce a list of websites (with links) you like to visit, e.g.\n\nGithub\nTagesschau\nSlashdot\n\nFind a dog picture on Wikipedia and link to it\nProduce a sourced quote (Optional)\n\nA Markdown-formatted document should be publishable as-is, as plain text, without looking like it’s been marked up with tags or formatting instructions. – John Gruber"
  },
  {
    "objectID": "material/06_websites.html",
    "href": "material/06_websites.html",
    "title": "Website",
    "section": "",
    "text": "The goal of this session is to build your own website and publish it on github via github actions\n\nExercise 1: Setup the pipeline\nCreate a Quarto website project. If you want you can also create a blog project. Either via RStudio or from the shell\n# website\nquarto create-project mywebsite --type website\n# blog\nquarto create-project mybwebsite --type website:blog\n\n\n\n\n\n\nTip\n\n\n\nIf you call the repository “GITHUB-USERNAME.github.io”, then your website will be available via https://GITHUB-USERNAME.github.io. Otherwise, it will be https://GITHUB-USERNAME.github.io/mywebsite\n\n\nIn RStudio, make sure to initialize it as a Git repository. In the shell, navigate to your project folder and\nInitialize a Git repository\ngit init\nadd everything\ngit add .\ncommit\ngit commit -m \"first commit\" .\nCreate a new repository on GitHub. Do not initialize it with anything. GitHub will tell you how to associate a local git repository with it. Do it.\n\n\nExercise 2: Explore _quarto.yml\n\nMove the navbar menu to a different location\nadd a link to your institutional website (or any other personal website, e.g. google scholar citations)\nadd a simple page footer (maybe a copyright note and/or links to your socials)\ntry to remove the search function\n\n\n\nExercise 2: Theming\n\nChange the theme to a supported bootswatch theme\n\n\n\nExercise 3: Content\n\nAdd some content to index.qmd\ntry to integrate the cv you created in an earlier exercise into the page.\n\n\n\nExercise : Publish\nSetup the GitHub action to publish automatically to Github. Make sure to follow all necessary steps."
  },
  {
    "objectID": "material/05_presentations.html",
    "href": "material/05_presentations.html",
    "title": "Presentation",
    "section": "",
    "text": "Basic Exercise\n\nUsing RStudio, create a new revealjs Quarto presentation\nChange YAML:\n\nauthor for your name\ntitled “My first Quarto Presentation!”\nAdd slide numbering (what do the different types mean?)\n\nWrite out what you did this morning (woke up, ate breakfast, walked to this room, etc) in sub-sections\nAdd a code chunk and try out different output locations\nLink out to an image with markdown syntax\nRender it!\n\n\n\nMore advanced features\n\nAdd 4 new slides\n\nCreate a list of incremental reveal (::: + .incremental)\nCreate at least two ::: div fragments (.fragment + one of .fade-out + .highlight-red + .fade-in-then-out)\nAdd one span fragment with [text]{.fragment .type-of-fragment} syntax\nOne with a code highlighting walking through at least two lines\n\n\n\n\nTheming\n\nchange the background color of one slide\nadd a background image to a slide\nchange the theme of the presentation\n(if you are comfortable with CSS) add a custom.scss file and change a few variables\n\n\n\nProject\nTake any old presentation of yours. Would you be able to recreate it with Quarto? If so, try. If not, what feature are you missing?"
  },
  {
    "objectID": "material/01_introduction.html",
    "href": "material/01_introduction.html",
    "title": "Setup",
    "section": "",
    "text": "Install RStudio Desktop"
  },
  {
    "objectID": "material/01_introduction.html#exercise-3",
    "href": "material/01_introduction.html#exercise-3",
    "title": "Setup",
    "section": "Exercise 3",
    "text": "Exercise 3\nFind the right command to check if your Quarto installation is ok and run it to detect potential problems"
  },
  {
    "objectID": "material/01_introduction.html#footnotes",
    "href": "material/01_introduction.html#footnotes",
    "title": "Setup",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nThe terminology can become a bit confusing in this area. An extremely elaborate try to disentangle all terms can be found in this askubuntu thread.↩︎"
  },
  {
    "objectID": "material/extra/git.html",
    "href": "material/extra/git.html",
    "title": "Let’s Git going",
    "section": "",
    "text": "Git is a version control system that helps you manage and track changes to files, typically used in software development but applicable to other projects as well.\nAt its core, Git allows you to keep a record of your project’s history and collaborate with others effectively. Here’s a breakdown of the key concepts:\n\nRepositories: Git operates within repositories, which can be thought of as containers for your project. A repository stores all the files, directories, and their entire history.\nCommits: A commit represents a snapshot of your project at a specific point in time. It’s like a saved version of your code. Each commit has a unique identifier and contains the changes made since the last commit.\nBranches: Git allows you to create branches, which are separate lines of development within a repository. Branches enable you to work on different features or bug fixes independently without affecting the main codebase. They also make it easier to merge changes later.\nWorking Directory: This refers to the current state of your project files on your local machine. You make changes to files in your working directory.\nStaging Area: The staging area, also known as the index, is where you prepare your changes before committing them. You add modified files or specific changes to the staging area to include them in the next commit.\nPush and Pull: When you want to share your changes or collaborate with others, you can push your local commits to a remote repository. On the other hand, pulling refers to fetching the latest changes from the remote repository to your local copy.\nMerge: Merging is the process of combining different branches or commits into one. It allows you to incorporate changes from one branch into another.\nConflict: Conflicts occur when Git can’t automatically merge changes because they conflict with each other. Resolving conflicts involves manually modifying the conflicting code to create a unified and correct version.\n\nGit provides a command-line interface (CLI) and various graphical user interfaces (GUIs) to interact with its functionality. Using Git, you can track changes, revert to previous versions, collaborate with others, and maintain a comprehensive history of your project."
  },
  {
    "objectID": "material/extra/git.html#what-is-git",
    "href": "material/extra/git.html#what-is-git",
    "title": "Let’s Git going",
    "section": "",
    "text": "Git is a version control system that helps you manage and track changes to files, typically used in software development but applicable to other projects as well.\nAt its core, Git allows you to keep a record of your project’s history and collaborate with others effectively. Here’s a breakdown of the key concepts:\n\nRepositories: Git operates within repositories, which can be thought of as containers for your project. A repository stores all the files, directories, and their entire history.\nCommits: A commit represents a snapshot of your project at a specific point in time. It’s like a saved version of your code. Each commit has a unique identifier and contains the changes made since the last commit.\nBranches: Git allows you to create branches, which are separate lines of development within a repository. Branches enable you to work on different features or bug fixes independently without affecting the main codebase. They also make it easier to merge changes later.\nWorking Directory: This refers to the current state of your project files on your local machine. You make changes to files in your working directory.\nStaging Area: The staging area, also known as the index, is where you prepare your changes before committing them. You add modified files or specific changes to the staging area to include them in the next commit.\nPush and Pull: When you want to share your changes or collaborate with others, you can push your local commits to a remote repository. On the other hand, pulling refers to fetching the latest changes from the remote repository to your local copy.\nMerge: Merging is the process of combining different branches or commits into one. It allows you to incorporate changes from one branch into another.\nConflict: Conflicts occur when Git can’t automatically merge changes because they conflict with each other. Resolving conflicts involves manually modifying the conflicting code to create a unified and correct version.\n\nGit provides a command-line interface (CLI) and various graphical user interfaces (GUIs) to interact with its functionality. Using Git, you can track changes, revert to previous versions, collaborate with others, and maintain a comprehensive history of your project."
  },
  {
    "objectID": "material/extra/git.html#what-is-github",
    "href": "material/extra/git.html#what-is-github",
    "title": "Let’s Git going",
    "section": "What is GitHub?",
    "text": "What is GitHub?\nGitHub is a web-based platform that utilizes the Git version control system. It provides a centralized location for developers to store, manage, collaborate on, and share their code repositories. In addition to the points mentioned above, GitHub also offers:\n\nRemote Hosting: GitHub acts as a remote hosting service for Git repositories. It provides a secure and accessible location where developers can store their code and collaborate with others.\nCollaboration: GitHub facilitates collaboration among developers by offering features like pull requests and code reviews. Multiple contributors can work together on the same project, propose changes, and discuss modifications before merging them into the main codebase.\nIssue Tracking: GitHub provides a built-in issue tracking system where users can report bugs, suggest enhancements, or create task lists. It allows for better project management and communication among team members."
  },
  {
    "objectID": "material/extra/git.html#install-git",
    "href": "material/extra/git.html#install-git",
    "title": "Let’s Git going",
    "section": "Install Git",
    "text": "Install Git\n\nWindowsmacOSLinux\n\n\n\nInstall Git from here: https://gitforwindows.org/\nWhen asked about “Adjusting your PATH environment”, make sure to select “Git from the command line and also from 3rd-party software”. Everything else can be left as default\n\n\n\n\nInstall Git from here: http://git-scm.com/downloads\n\n\n\nInstall Git via your distro’s package manager.\nUbuntu or Debian Linux:\nsudo apt-get install git\nFedora or RedHat Linux:\nsudo yum install git\nA comprehensive list for various Linux and Unix package managers: https://git-scm.com/download/linux"
  },
  {
    "objectID": "material/extra/git.html#register-on-github",
    "href": "material/extra/git.html#register-on-github",
    "title": "Let’s Git going",
    "section": "Register on GitHub",
    "text": "Register on GitHub\nRegister an account at https://github.com and choose a username that you are comfortable sharing with your boss. There are several paid plans available, but for the majority of cases, the free plan is more than enough."
  },
  {
    "objectID": "material/extra/git.html#setup-git",
    "href": "material/extra/git.html#setup-git",
    "title": "Let’s Git going",
    "section": "Setup Git",
    "text": "Setup Git\nYou may have to do that via the shell (What is that?)\n\n\n\n\n\n\nFor Windows Users\n\n\n\nWorking with the correct shell in Windows can be tricky. Either open it in RStudio via Tools &gt; Terminal, or open the Start menu and type “Git Bash” into the search bar. The icon for Git Bash and the words “Git Bash Desktop App” will appear. Click on the icon or the words “Git Bash Desktop App” to open Git Bash.\n\n\ngit config --global user.name 'Jane Doe'\ngit config --global user.email 'jane@example.com'\ngit config --global --list\nUse your name and the email associated with your GitHub account.\nOptionally, you can set it up via the R package usethis\n## install if needed (do this only once)\n## install.packages(\"usethis\")\n\nlibrary(usethis)\nuse_git_config(user.name = \"Jane Doe\", user.email = \"jane@example.org\")"
  },
  {
    "objectID": "material/extra/git.html#get-a-client",
    "href": "material/extra/git.html#get-a-client",
    "title": "Let’s Git going",
    "section": "Get a Client",
    "text": "Get a Client\n(This step is optional)\nGit is a command line tool and thus used via the shell which not everyone is comfortable using. If you want to instead use Git via a client (similar to using R via RStudio), you may find GitKraken a fantastic tool. Gitkraken is a free and powerful Git(Hub) client that works on Windows, macOS, and Linux. The free version should be sufficient for most users.\nNote that RStudio also has a rudimentary git client built in, which is decent enough for many common git related tasks."
  },
  {
    "objectID": "material/extra/git.html#connecting-git-github-and-rstudio",
    "href": "material/extra/git.html#connecting-git-github-and-rstudio",
    "title": "Let’s Git going",
    "section": "Connecting Git, GitHub, and RStudio",
    "text": "Connecting Git, GitHub, and RStudio\nMaking all components communicate smoothly requires some more fiddly tasks. We need to setup a SSH connection between Rstudio (or rather your computer) and GitHub. We here only outline thenecessary steps to achieve a secure communcation channel. For more details on the technicalities see here.\n\nFrom Rstudio\n\nGo to Tools &gt; Global Options…&gt; Git/SVN &gt; Create RSA Key. RStudio prompts for a passphrase. This is optional (but considered best practice). You can skip it for now and implement it next time.\nAs SSH key type choose ED25519\nClick “Create” and RStudio will generate an SSH key pair, stored in the files ~/.ssh/id_ed25519 and ~/.ssh/id_ed25519.pub.\n\n\n\nFrom the shell\nssh-keygen -t ed25519 -C \"DESCRIPTIVE-COMMENT\"\nAccept the proposal to save the key in the default location by simply pressing Enter. You have the option to protect the key with a passphrase. This is optional (but considered best practice).\n\n\nAdd key to ssh-agent\nThis is very OS specific. If you find anything not working here, check the official GitHub documentation\n\nmacOSWindowsLinux\n\n\nCheck if ssh-agent is enabled. Here’s what success look like (with a varying pid):\n$ eval \"$(ssh-agent -s)\"\nAgent pid 14333\nif it fails like this:\n$ eval \"$(ssh-agent -s)\"\nmkdtemp: private socket dir: No such file or directory\ntry again as a super user.\n$ sudo su\nPassword:\n$ sh-3.2# eval \"$(ssh-agent -s)\"\nAgent pid 14333\n$ sh-3.2# exit\nexit\nAdd your key to the ssh agent. Give passphrase if necessary. The -K option stores your passphrase in the keychain.\nssh-add -K ~/.ssh/id_ed25519\nIf you’re on macOS Sierra 10.12.2 and higher, you need to create a file ~/.ssh/config with these contents:\nHost *\n  AddKeysToAgent yes\n  UseKeychain yes\n  IdentityFile ~/.ssh/id_ed25519\nYou can omit the line about UseKeychain if you didn’t use a passphrase. But if you did, this should store your passphrase persistently in the keychain. Otherwise, you will have to enter it every time you log in.\n\n\nIn a Git Bash shell, check if the ssh-agent is running:\n$ eval $(ssh-agent -s)\nAgent pid 14333\nAdd your key, substituting the correct name for your key.\n$ ssh-add ~/.ssh/id_ed25519\n\n\nIn a shell, check if the ssh-agent is running:\n$ eval \"$(ssh-agent -s)\"\nAgent pid 14333\nAdd your key, substituting the correct name for your key.\nssh-add ~/.ssh/id_ed25519\n\n\n\n\n\nProvide the public key to GitHub\nCopy from RStudio:\nGo to Tools &gt; Global Options…&gt; Git/SVN. click “View public key”. Accept the offer to copy to your clipboard.\nCopy via shell:\nOpen ~/.ssh/id_ed25519.pub in an editor and copy the contents to your clipboard. Or do one of the following at the command line:\nMac OS: pbcopy &lt; ~/.ssh/id_ed25519.pub\nWindows: clip &lt; ~/.ssh/id_ed25519.pub\nLinux: xclip -sel clip &lt; ~/.ssh/id_ed25519.pub\n(Linux: if needed, install xclip via apt-get or yum.)\nPaste on GitHub:\n- Click on your profile pic in upper right corner\n\nGo to Settings &gt; SSH and GPG keys\nClick “New SSH key”\nPaste your public key in the “Key” box. (Give it an informative title)\nClick “Add SSH key”\n\nTest:\nYou can use\nssh -T git@github.com\nto test your connection to GitHub. If you are unsure what is going on, check the GitHub docs. For more troubleshooting check here.\n\n\nMake a test repo\nTo test the connection to GitHub (and alos RStudio) we need to create a test repository on GitHub:\n\nMake sure you are logged into GitHub\nIn the upper right corner, click “+” and “New repository”\nUse the following setup: \nClick “Create repository”\nYou will end up here: \nClick the green “&lt;&gt; Code” Button\nChoose SSH and copy the URL\n\nTo clone the repository to your computer, you can either use your Git client, e.g. Gitkraken under File &gt; Open Repo:\n\nor via the shell:\n1. navigate to the directory you want to use via cd\n\ngit clone git@github.com:YOUR-USERNAME/YOUR-REPOSITORY.git which looks like this:\n\n$ git clone git@github.com:schochastics/mytestrepo.git\nCloning into 'mytestrepo'...\nremote: Enumerating objects: 3, done.\nremote: Counting objects: 100% (3/3), done.\nremote: Compressing objects: 100% (2/2), done.\nremote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0\nReceiving objects: 100% (3/3), done.\n\nadd a line to README.md and check if Git recognizes the change:\n\n$ echo \"A line I wrote on my local computer  \" &gt;&gt; README.md\n$ git status\nOn branch main\nYour branch is up-to-date with 'origin/main'.\n\nChanges not staged for commit:\n  (use \"git add &lt;file&gt;...\" to update what will be committed)\n  (use \"git restore &lt;file&gt;...\" to discard changes in working directory)\n    modified:   README.md\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n\nStage the changes and push it to GitHub with these commands:\n\ngit add README.md\ngit commit -m \"A commit from my local computer\"\ngit push\nthis will look something like this:\n$ git add README.md \n$ git commit -m \"A commit from my local computer\"\n[main 06162c1] A commit from my local computer\n 1 file changed, 1 insertion(+)\n$ git push\nEnumerating objects: 5, done.\nCounting objects: 100% (5/5), done.\nDelta compression using up to 8 threads\nCompressing objects: 100% (2/2), done.\nWriting objects: 100% (3/3), 329 bytes | 329.00 KiB/s, done.\nTotal 3 (delta 0), reused 0 (delta 0), pack-reused 0\nTo github.com:schochastics/mytestrepo.git\n   564049b..06162c1  main -&gt; main\n\n\n\n\n\n\nNote\n\n\n\nOn Windows, you might see a message about LF will be replaced by CRLF. This is normal and does not require any action on your part. Windows handles line endings differently from other operating systems, but the default setup for Git for Windows is appropriate for most people and situations.\n\n\n\nGo back to the browser, hit refresh and verify that see the new “A line I wrote on my local computer” in the README.\n\nIf everything went well, you have successfully setup everything you need to work with Git and Github\n(You can delete the test repo again: On GitHub, while viewing the repository, go to “Settings” and “Delete Repository”. Locally, you can simply delete the folder )\n\n\nConnecting RStudio and GitHub\nUsually this just works out of the box. To verify that RStudio detected Git you can use either of these options:\n\nClick File &gt; New Project…. You should see an option “Version Control”\nClick File &gt; New Project… &gt; New Directory &gt; New Project &gt; and check if you have an option “Create a git repository”\n\nIf neither works for you, go through the troubleshooting steps described here."
  },
  {
    "objectID": "material/extra/git.html#github-repo-to-rstudio-project",
    "href": "material/extra/git.html#github-repo-to-rstudio-project",
    "title": "Let’s Git going",
    "section": "GitHub repo to Rstudio project",
    "text": "GitHub repo to Rstudio project\nAssuming you have created a GitHub repository as in Section “Make a GitHub repo”, you can create an RStudio project out of it via the usethis package:\nusethis::create_from_github(\n  \"git@github.com:YOUR-USERNAME/REPOSITORY.git\",\n  destdir = \"~/path/to/where/you/want/the/local/repo/\"\n)\nor via RStudio:\nFile &gt; New Project &gt; Version Control &gt; Git. In the “repository URL” paste the SSH URL (git@github.com:YOUR-USERNAME/REPOSITORY.git) of your new GitHub repository.\nIf you open the Project via File &gt; Open Project you will find a pane called git: \nThis is the small Git client built into RStudio. It is very convenient for simple add/commit/push/pull tasks so you do not have to switch to the shell or another client to perform GitHub tasks."
  },
  {
    "objectID": "material/extra/git.html#further-material",
    "href": "material/extra/git.html#further-material",
    "title": "Let’s Git going",
    "section": "Further Material",
    "text": "Further Material\n\nThis document is a speedrun (and slightly updated) version of chapter 1-14 of happygitwithr\nAnother brilliant and gentle introduction to Git(Hub) was written by Cosima Meyer"
  },
  {
    "objectID": "material/04_exporting.html",
    "href": "material/04_exporting.html",
    "title": "YAML",
    "section": "",
    "text": "Quarto is a very versatile tool that can create documents in many different formats. Switching between formats does not mean that you need to switch programs. The only thing that needs to be changed is the documents “configuration”. Quarto documents are configured via a YAML header."
  },
  {
    "objectID": "material/04_exporting.html#single-document",
    "href": "material/04_exporting.html#single-document",
    "title": "YAML",
    "section": "Single Document",
    "text": "Single Document\nA single .qmd document always starts with a YAML header. The minimum working header just includes the format of the document.1\n---\nformat: html\n---\nTo specify options for the output format use the scheme.\n---\nformat: \n  html:\n    toc: true\n    code-fold: true\n---\nYAML is very sensitive to malformed instructions. Create a default quarto document in RStudio (File &gt; New File &gt; Quarto Document…) and add a (random) title. Replace the YAML header with each of the following:\n---\nformat:html\n---\n---\nformat: \nhtml\n---\n---\nformat: \n  html:\n    toc: true\n---\nObserve the outcome when rendering and try to identify the source of error if there is one."
  },
  {
    "objectID": "material/04_exporting.html#project",
    "href": "material/04_exporting.html#project",
    "title": "YAML",
    "section": "Project",
    "text": "Project\nA Quarto projects is simply a set of documents put together into a single resource (like a book or a website). In this case, the YAML configuration happens in a configuration file called _quarto.yml. We’ll explore this in more detail in the session about websites, but in essence, most of what is discussed here for a single document also holds for _quarto.yml."
  },
  {
    "objectID": "material/04_exporting.html#footnotes",
    "href": "material/04_exporting.html#footnotes",
    "title": "YAML",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nIf you create a new document via RStudio (File &gt; New File &gt; Quarto Document…) then you are also required to add a title.↩︎"
  },
  {
    "objectID": "material/03_combine_with_R.html",
    "href": "material/03_combine_with_R.html",
    "title": "Computation",
    "section": "",
    "text": "| City     | Country |\n|----------|---------|\n| Mannheim | Germany |\n| Paris    | France  |\n| Tokyo    | Japan   |\n\n\n\nCity\nCountry\n\n\n\n\nMannheim\nGermany\n\n\nParis\nFrance\n\n\nTokyo\nJapan\n\n\n\n\n\nCreate a Tic Tac Toe field and play a game with yourself\n\n\n\nX\nX\nO\n\n\n\n\nO\nO\nX\n\n\nX\nO\nO"
  },
  {
    "objectID": "material/03_combine_with_R.html#exercise-1",
    "href": "material/03_combine_with_R.html#exercise-1",
    "title": "Computation",
    "section": "Exercise 1",
    "text": "Exercise 1\nCopy and paste the R code chunk into a Quarto document and render it. Tell us what’s the output."
  },
  {
    "objectID": "material/03_combine_with_R.html#exercise-2-optional",
    "href": "material/03_combine_with_R.html#exercise-2-optional",
    "title": "Computation",
    "section": "Exercise 2 (Optional)",
    "text": "Exercise 2 (Optional)\nThis workshop is really not about R, but we still need to use R. If you don’t know (enough) R, try to familiarize yourself with the following. If you know all of them, congratulations you know enough R to survive this session!\n1 + 2 - 3 * 4 / 3\n\nx &lt;- \"hello world\"\n\nx\n\n## message\n\nmessage(x)\n\n## mtcars is a built-in dataset. The data structure is called data frame\nmtcars\n\n## simple functions\nnrow(mtcars)\n\nhead(mtcars)\n\n## basic viz\n\nplot(mtcars$mpg, mtcars$hp)\n\nhist(mtcars$mpg)\n\n## installing external packages\n\ninstall.packages(\"knitr\")\n\n## You can either call the package by `library`\n\nlibrary(knitr)\nkable\n\n## or the namespace operator ::\n\nknitr::kable\n\n## read some data, if your csv file is called hello.csv\n\nx &lt;- read.csv(\"hello.csv\")\n\n## get help\n\n?read.csv"
  },
  {
    "objectID": "material/03_combine_with_R.html#exercise-1-1",
    "href": "material/03_combine_with_R.html#exercise-1-1",
    "title": "Computation",
    "section": "Exercise 1",
    "text": "Exercise 1\nCopy and paste the R code chunk into a Quarto document and render it. Tell us what’s the output.\n\n```{r}\nx &lt;- \"Hello World!\"\nmessage(x)\n```"
  },
  {
    "objectID": "material/03_combine_with_R.html#exercise-2",
    "href": "material/03_combine_with_R.html#exercise-2",
    "title": "Computation",
    "section": "Exercise 2",
    "text": "Exercise 2\nCreate a code chunk in a Quarto document to calculate the area of a circle with radius = 10 (hints: pi). Render it."
  },
  {
    "objectID": "material/03_combine_with_R.html#when-to-use-inline",
    "href": "material/03_combine_with_R.html#when-to-use-inline",
    "title": "Computation",
    "section": "When to use inline?",
    "text": "When to use inline?\nFor quick and dirty generation of one number in a paragraph, e.g. number of observations, calculation of mean. Otherwise, use code chunk."
  },
  {
    "objectID": "material/03_combine_with_R.html#exercise-1-2",
    "href": "material/03_combine_with_R.html#exercise-1-2",
    "title": "Computation",
    "section": "Exercise 1:",
    "text": "Exercise 1:\nConvert the above area calculation to inline R code."
  },
  {
    "objectID": "material/03_combine_with_R.html#exercise-2-1",
    "href": "material/03_combine_with_R.html#exercise-2-1",
    "title": "Computation",
    "section": "Exercise 2:",
    "text": "Exercise 2:\nWrite inline R code to display the following sentence (hints: nrow):\nThere are 32 observations in the data frame mtcars."
  },
  {
    "objectID": "material/03_combine_with_R.html#exercise-3",
    "href": "material/03_combine_with_R.html#exercise-3",
    "title": "Computation",
    "section": "Exercise",
    "text": "Exercise\nDisplay the content of mtcars as a table in a Quarto document like the following:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\n\n\n\n\nMazda RX4\n21.0\n6\n160.0\n110\n3.90\n2.620\n16.46\n0\n1\n4\n4\n\n\nMazda RX4 Wag\n21.0\n6\n160.0\n110\n3.90\n2.875\n17.02\n0\n1\n4\n4\n\n\nDatsun 710\n22.8\n4\n108.0\n93\n3.85\n2.320\n18.61\n1\n1\n4\n1\n\n\nHornet 4 Drive\n21.4\n6\n258.0\n110\n3.08\n3.215\n19.44\n1\n0\n3\n1\n\n\nHornet Sportabout\n18.7\n8\n360.0\n175\n3.15\n3.440\n17.02\n0\n0\n3\n2\n\n\nValiant\n18.1\n6\n225.0\n105\n2.76\n3.460\n20.22\n1\n0\n3\n1\n\n\nDuster 360\n14.3\n8\n360.0\n245\n3.21\n3.570\n15.84\n0\n0\n3\n4\n\n\nMerc 240D\n24.4\n4\n146.7\n62\n3.69\n3.190\n20.00\n1\n0\n4\n2\n\n\nMerc 230\n22.8\n4\n140.8\n95\n3.92\n3.150\n22.90\n1\n0\n4\n2\n\n\nMerc 280\n19.2\n6\n167.6\n123\n3.92\n3.440\n18.30\n1\n0\n4\n4\n\n\nMerc 280C\n17.8\n6\n167.6\n123\n3.92\n3.440\n18.90\n1\n0\n4\n4\n\n\nMerc 450SE\n16.4\n8\n275.8\n180\n3.07\n4.070\n17.40\n0\n0\n3\n3\n\n\nMerc 450SL\n17.3\n8\n275.8\n180\n3.07\n3.730\n17.60\n0\n0\n3\n3\n\n\nMerc 450SLC\n15.2\n8\n275.8\n180\n3.07\n3.780\n18.00\n0\n0\n3\n3\n\n\nCadillac Fleetwood\n10.4\n8\n472.0\n205\n2.93\n5.250\n17.98\n0\n0\n3\n4\n\n\nLincoln Continental\n10.4\n8\n460.0\n215\n3.00\n5.424\n17.82\n0\n0\n3\n4\n\n\nChrysler Imperial\n14.7\n8\n440.0\n230\n3.23\n5.345\n17.42\n0\n0\n3\n4\n\n\nFiat 128\n32.4\n4\n78.7\n66\n4.08\n2.200\n19.47\n1\n1\n4\n1\n\n\nHonda Civic\n30.4\n4\n75.7\n52\n4.93\n1.615\n18.52\n1\n1\n4\n2\n\n\nToyota Corolla\n33.9\n4\n71.1\n65\n4.22\n1.835\n19.90\n1\n1\n4\n1\n\n\nToyota Corona\n21.5\n4\n120.1\n97\n3.70\n2.465\n20.01\n1\n0\n3\n1\n\n\nDodge Challenger\n15.5\n8\n318.0\n150\n2.76\n3.520\n16.87\n0\n0\n3\n2\n\n\nAMC Javelin\n15.2\n8\n304.0\n150\n3.15\n3.435\n17.30\n0\n0\n3\n2\n\n\nCamaro Z28\n13.3\n8\n350.0\n245\n3.73\n3.840\n15.41\n0\n0\n3\n4\n\n\nPontiac Firebird\n19.2\n8\n400.0\n175\n3.08\n3.845\n17.05\n0\n0\n3\n2\n\n\nFiat X1-9\n27.3\n4\n79.0\n66\n4.08\n1.935\n18.90\n1\n1\n4\n1\n\n\nPorsche 914-2\n26.0\n4\n120.3\n91\n4.43\n2.140\n16.70\n0\n1\n5\n2\n\n\nLotus Europa\n30.4\n4\n95.1\n113\n3.77\n1.513\n16.90\n1\n1\n5\n2\n\n\nFord Pantera L\n15.8\n8\n351.0\n264\n4.22\n3.170\n14.50\n0\n1\n5\n4\n\n\nFerrari Dino\n19.7\n6\n145.0\n175\n3.62\n2.770\n15.50\n0\n1\n5\n6\n\n\nMaserati Bora\n15.0\n8\n301.0\n335\n3.54\n3.570\n14.60\n0\n1\n5\n8\n\n\nVolvo 142E\n21.4\n4\n121.0\n109\n4.11\n2.780\n18.60\n1\n1\n4\n2"
  },
  {
    "objectID": "material/03_combine_with_R.html#exercise-4",
    "href": "material/03_combine_with_R.html#exercise-4",
    "title": "Computation",
    "section": "Exercise",
    "text": "Exercise\nDisplay a scatter plot in a Quarto document like the following:"
  },
  {
    "objectID": "material/03_combine_with_R.html#output-options-knitr",
    "href": "material/03_combine_with_R.html#output-options-knitr",
    "title": "Computation",
    "section": "Output options (knitr)",
    "text": "Output options (knitr)\n\n```{r}\n#| echo: false\nknitr::kable(mtcars)\n```\nThere are\n\neval (evaluate the code chunk or not)\necho (include the source code or not in the output)\noutput (include the execution result in the output or not: true, false, asis)\nwarning (include warnings in the output)\nerror (include errors in the output)\ninclude (include: false suppresses all output, useful for reading data or loading packages)\n\n\nExercise\nRead this file and make Quarto display the following:\nThere are 344 observations in the file penguins_raw.csv and the first few rows look like so:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nstudyName\nSample.Number\nSpecies\nRegion\nIsland\nStage\nIndividual.ID\nClutch.Completion\nDate.Egg\nCulmen.Length..mm.\nCulmen.Depth..mm.\nFlipper.Length..mm.\nBody.Mass..g.\nSex\nDelta.15.N..o.oo.\nDelta.13.C..o.oo.\nComments\n\n\n\n\nPAL0708\n1\nAdelie Penguin (Pygoscelis adeliae)\nAnvers\nTorgersen\nAdult, 1 Egg Stage\nN1A1\nYes\n2007-11-11\n39.1\n18.7\n181\n3750\nMALE\nNA\nNA\nNot enough blood for isotopes.\n\n\nPAL0708\n2\nAdelie Penguin (Pygoscelis adeliae)\nAnvers\nTorgersen\nAdult, 1 Egg Stage\nN1A2\nYes\n2007-11-11\n39.5\n17.4\n186\n3800\nFEMALE\n8.94956\n-24.69454\nNA\n\n\nPAL0708\n3\nAdelie Penguin (Pygoscelis adeliae)\nAnvers\nTorgersen\nAdult, 1 Egg Stage\nN2A1\nYes\n2007-11-16\n40.3\n18.0\n195\n3250\nFEMALE\n8.36821\n-25.33302\nNA\n\n\nPAL0708\n4\nAdelie Penguin (Pygoscelis adeliae)\nAnvers\nTorgersen\nAdult, 1 Egg Stage\nN2A2\nYes\n2007-11-16\nNA\nNA\nNA\nNA\nNA\nNA\nNA\nAdult not sampled.\n\n\nPAL0708\n5\nAdelie Penguin (Pygoscelis adeliae)\nAnvers\nTorgersen\nAdult, 1 Egg Stage\nN3A1\nYes\n2007-11-16\n36.7\n19.3\n193\n3450\nFEMALE\n8.76651\n-25.32426\nNA\n\n\nPAL0708\n6\nAdelie Penguin (Pygoscelis adeliae)\nAnvers\nTorgersen\nAdult, 1 Egg Stage\nN3A2\nYes\n2007-11-16\n39.3\n20.6\n190\n3650\nMALE\n8.66496\n-25.29805\nNA"
  },
  {
    "objectID": "material/03_combine_with_R.html#figure-options-knitr",
    "href": "material/03_combine_with_R.html#figure-options-knitr",
    "title": "Computation",
    "section": "Figure Options (knitr)",
    "text": "Figure Options (knitr)\nref\nThere are:\n\nfig-width\nfig-height\nfig-cap\nfig-alt\nfig-align\nfig-dpi\n\nAn example to play around\n\n```{r}\n#| fig-cap: \"A random histogram\"\n#| fig-height: 10\n#| fig-align: right\n#| echo: false\nhist(mtcars$mpg)\n```\n\n\n\n\n\nA random histogram"
  },
  {
    "objectID": "material/03_combine_with_R.html#best-practices",
    "href": "material/03_combine_with_R.html#best-practices",
    "title": "Computation",
    "section": "Best practices",
    "text": "Best practices\n\nLabel your chunk\nIt does nothing apparently. You will know why it is important tomorrow. All labels must be unique.\n```{r}\n#| label: mtcars_listing\n#| echo: false\nknitr::kable(mtcars)\n```\n\n\n(Not) cache\nYou can cache the computational result of a chunk (save the result as a file. When the Quarto file is being rendered again, the cached result is used instead of doing the computation again). It’s best to use it with a labeled code chunk. In general, it is not recommended for a reproducible scientific workflow. Use it unless you know what you are doing.\n```{r}\n#| label: mtcars_listing\n#| echo: false\n#| cache: true\nknitr::kable(mtcars)\n```"
  },
  {
    "objectID": "material/03_combine_with_R.html#engines",
    "href": "material/03_combine_with_R.html#engines",
    "title": "Computation",
    "section": "Engines",
    "text": "Engines\nR code inside a Quarto document is handled by the computational engine knitr. You might want to use another computational engine if R is not your thing. For example, Python code is handled by Jupyter. In a mix language environment, you might need reticulate.\n\n```{python}\n## This is all the Python I know\n\ndef fib(n):\n    a, b = 0, 1\n    for _ in range(n):\n        yield a\n        a, b = b, a + b\nlist(fib(5))\n```\n\n## This is all the Python I know\n\ndef fib(n):\n    a, b = 0, 1\n    for _ in range(n):\n        yield a\n        a, b = b, a + b\nlist(fib(5))\n\n[0, 1, 1, 2, 3]"
  },
  {
    "objectID": "material/03_combine_with_R.html#debrief",
    "href": "material/03_combine_with_R.html#debrief",
    "title": "Computation",
    "section": "Debrief",
    "text": "Debrief\nQ: How to display table caption?\nA:\nWith computation\n\n```{r}\n#| echo: false\n#| tbl-cap: \"Just a few rows\"\n#| tbl-cap-location: bottom\n#| label: headmtcars\nknitr::kable(head(mtcars))\n```\n\n\n\nJust a few rows \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nmpg\ncyl\ndisp\nhp\ndrat\nwt\nqsec\nvs\nam\ngear\ncarb\n\n\n\n\nMazda RX4\n21.0\n6\n160\n110\n3.90\n2.620\n16.46\n0\n1\n4\n4\n\n\nMazda RX4 Wag\n21.0\n6\n160\n110\n3.90\n2.875\n17.02\n0\n1\n4\n4\n\n\nDatsun 710\n22.8\n4\n108\n93\n3.85\n2.320\n18.61\n1\n1\n4\n1\n\n\nHornet 4 Drive\n21.4\n6\n258\n110\n3.08\n3.215\n19.44\n1\n0\n3\n1\n\n\nHornet Sportabout\n18.7\n8\n360\n175\n3.15\n3.440\n17.02\n0\n0\n3\n2\n\n\nValiant\n18.1\n6\n225\n105\n2.76\n3.460\n20.22\n1\n0\n3\n1\n\n\n\n\n\nWithout computation\n| City     | Country |\n|----------|---------|\n| Mannheim | Germany |\n| Paris    | France  |\n| Tokyo    | Japan   |\n\n: List of cities\n\n\nList of cities\n\n\nCity\nCountry\n\n\n\n\nMannheim\nGermany\n\n\nParis\nFrance\n\n\nTokyo\nJapan\n\n\n\nQ: I’ve heard that the knitr::kable call is not necessary.\nA: You are right. Quarto (or the rendering engine: knitr) can convert all data.frame objects to Markdown tables using the df-print document option. You will learn about document options a.k.a. YAML Front Matter in the next session.\nQ: Does interactive viz work?\nA: Oui.\n```{r}\n#| echo: false\n#| fig-height: 2\n#| fig-width: 5\n#| label: ggplotly_demo\nlibrary(ggplot2)\nlibrary(plotly)\nfig &lt;- ggplot(mtcars, aes(wt, mpg)) + geom_point()\nggplotly(fig, height = 600, width = 1000)\n```\nQ: Any fancy stuff I can do with the code listing?\nA: Many\nShowing the filename\n```{r}\n#| eval: false\n#| filename: \"whatever.R\"\nlibrary(ggplot2)\nlibrary(plotly)\nfig &lt;- ggplot(mtcars, aes(wt, mpg)) + geom_point()\nggplotly(fig, height = 600, width = 1000)\n```\n\n\n\nwhatever.R\n\nlibrary(ggplot2)\nlibrary(plotly)\nfig &lt;- ggplot(mtcars, aes(wt, mpg)) + geom_point()\nggplotly(fig, height = 600, width = 1000)\n\n\nCode folding\n```{r}\n#| eval: false\n#| code-fold: true\n#| code-summary: \"Demo ggplotly\"\nlibrary(ggplot2)\nlibrary(plotly)\nfig &lt;- ggplot(mtcars, aes(wt, mpg)) + geom_point()\nggplotly(fig, height = 600, width = 1000)\n```\n\n\nDemo ggplotly\nlibrary(ggplot2)\nlibrary(plotly)\nfig &lt;- ggplot(mtcars, aes(wt, mpg)) + geom_point()\nggplotly(fig, height = 600, width = 1000)\n\n\nLine-numbering\n```{r}\n#| eval: false\n#| code-line-numbers: true\nlibrary(ggplot2)\nlibrary(plotly)\nfig &lt;- ggplot(mtcars, aes(wt, mpg)) + geom_point()\nggplotly(fig, height = 600, width = 1000)\n```\n\nlibrary(ggplot2)\nlibrary(plotly)\nfig &lt;- ggplot(mtcars, aes(wt, mpg)) + geom_point()\nggplotly(fig, height = 600, width = 1000)\n\nAnd many more."
  },
  {
    "objectID": "material/07_paper.html",
    "href": "material/07_paper.html",
    "title": "Academic paper",
    "section": "",
    "text": "Simply put, a (reproducible) academic paper is a single qmd file with the following:\n\nStandardized format (APA, PLOS, etc.)\nCitation / Bibliography (APA, Harvard, etc. Usually the same as the format)\nFigures and tables (hopefully generated from computation) and cross-referencing them (Table 1, Figure 1 etc.)\n\nThe major advantage of Quarto is to standardize all three (rather than doing them manually, when any of these things is to be changed).\nThe file format required is usually PDF or Microsoft Word."
  },
  {
    "objectID": "material/07_paper.html#activity",
    "href": "material/07_paper.html#activity",
    "title": "Academic paper",
    "section": "Activity",
    "text": "Activity\nQ:Suppose you want to use the arXiv extension (mikemahoney218/quarto-arxiv), Applying your knowledge from Session 5 and Session 6, how to initialize a project?\nA:\n## suppose we want the paper to be in a directory `mypaper`\nquarto use template mikemahoney218/quarto-arxiv\ncd mypaper\nls"
  },
  {
    "objectID": "material/07_paper.html#immediate-render",
    "href": "material/07_paper.html#immediate-render",
    "title": "Academic paper",
    "section": "Immediate render",
    "text": "Immediate render\nIn general, it is a good idea to immediate render the default article to check whether the template requires external R and/or LaTeX packages.\n## You might find that you don't have kableExtra, bloom; install them accordingly\nquarto render mypaper.qmd\nThe template (mypaper.qmd in this case) usually contains important information on how to write a paper with it. I usually keep it until a point I don’t need that information anymore.\nLet’s get our hands dirty"
  },
  {
    "objectID": "material/07_paper.html#exercise",
    "href": "material/07_paper.html#exercise",
    "title": "Academic paper",
    "section": "Exercise",
    "text": "Exercise\nEdit the YAML Front Matter so that:\n\nYou and a person you’d like to collaborate with are the authors\nEdit the title to a paper you’d like to write\nWrite a few sentences in the abstract\nChange the keywords and running head\n\nAnd render. And now you have your own arXiv preprint… ish."
  },
  {
    "objectID": "material/07_paper.html#exercise-1",
    "href": "material/07_paper.html#exercise-1",
    "title": "Academic paper",
    "section": "Exercise 1",
    "text": "Exercise 1\nTry out all four styles and explain to me what are the differences between the four."
  },
  {
    "objectID": "material/07_paper.html#exercise-2",
    "href": "material/07_paper.html#exercise-2",
    "title": "Academic paper",
    "section": "Exercise 2",
    "text": "Exercise 2\nFind this paper: “rtweet: Collecting and analyzing Twitter data” by Kearney, and cite it in the following sentence instead.\nMany R packages have been developed to collect social media data [e.g. @schoch2023software]."
  },
  {
    "objectID": "material/07_paper.html#exercise-3",
    "href": "material/07_paper.html#exercise-3",
    "title": "Academic paper",
    "section": "Exercise 3",
    "text": "Exercise 3\nThe syntax for citing multiple papers is: [@citekey1;@citekey2]. Try to cite both Schoch & Chan and Kearney in the above sentence."
  },
  {
    "objectID": "material/07_paper.html#exercise-1-1",
    "href": "material/07_paper.html#exercise-1-1",
    "title": "Academic paper",
    "section": "Exercise 1",
    "text": "Exercise 1\nCreate a code chunk to generate the histogram and cross-reference it."
  },
  {
    "objectID": "material/07_paper.html#labeling-non-computational-parts",
    "href": "material/07_paper.html#labeling-non-computational-parts",
    "title": "Academic paper",
    "section": "Labeling non-computational parts",
    "text": "Labeling non-computational parts\nIt’s better to download the image file.\n*Felis catus* (@fig-cat) does not have nine lives. @tbl-cats shows the number of lives of three known cats.\n\n![A picture of Felis catus](Cat_August_2010-4.jpg){#fig-cat}\n\n| Cat           | Number of lives |\n|---------------|-----------------|\n| Hello Kitty   | 1               |\n| Felix the cat | 1               |\n| Garfield      | 1               |\n\n: List of known cats and their number of lives {#tbl-cats}"
  },
  {
    "objectID": "material/07_paper.html#footnotes",
    "href": "material/07_paper.html#footnotes",
    "title": "Academic paper",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nUsing this method, the entry has no DOI. But again, this session is not about bibliography management. If you really want to have the DOI, the best way is to use crossref meta search. But that’s super sluggish. Also, you need to manually edit the obtained entries sometimes.↩︎"
  },
  {
    "objectID": "material.html",
    "href": "material.html",
    "title": "Quarto Workshop",
    "section": "",
    "text": "Date\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\nJun 19, 2023\n\n\nSetup\n\n\nDavid Schoch\n\n\n\n\nJun 19, 2023\n\n\nMarkdown\n\n\nChung-hong Chan\n\n\n\n\nJun 19, 2023\n\n\nComputation\n\n\nChung-hong Chan\n\n\n\n\nJun 19, 2023\n\n\nYAML\n\n\nDavid Schoch\n\n\n\n\nJun 20, 2023\n\n\nPresentation\n\n\nDavid Schoch\n\n\n\n\nJun 20, 2023\n\n\nWebsite\n\n\nDavid Schoch\n\n\n\n\nJun 20, 2023\n\n\nAcademic paper\n\n\nChung-hong Chan\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "material.html#material-for-sessions",
    "href": "material.html#material-for-sessions",
    "title": "Quarto Workshop",
    "section": "",
    "text": "Date\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\nJun 19, 2023\n\n\nSetup\n\n\nDavid Schoch\n\n\n\n\nJun 19, 2023\n\n\nMarkdown\n\n\nChung-hong Chan\n\n\n\n\nJun 19, 2023\n\n\nComputation\n\n\nChung-hong Chan\n\n\n\n\nJun 19, 2023\n\n\nYAML\n\n\nDavid Schoch\n\n\n\n\nJun 20, 2023\n\n\nPresentation\n\n\nDavid Schoch\n\n\n\n\nJun 20, 2023\n\n\nWebsite\n\n\nDavid Schoch\n\n\n\n\nJun 20, 2023\n\n\nAcademic paper\n\n\nChung-hong Chan\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "material.html#slides",
    "href": "material.html#slides",
    "title": "Quarto Workshop",
    "section": "Slides",
    "text": "Slides\n\n\n\n\n\n\nDate\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\nJun 19, 2023\n\n\nIntroduction to literate programming and setting up Quarto\n\n\nDavid Schoch\n\n\n\n\nJun 20, 2023\n\n\nLet’s make a presentation with Quarto\n\n\nDavid Schoch\n\n\n\n\nJun 20, 2023\n\n\nLet’s make a website with Quarto\n\n\nDavid Schoch\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "material.html#extra-material",
    "href": "material.html#extra-material",
    "title": "Quarto Workshop",
    "section": "Extra Material",
    "text": "Extra Material\n\n\n\n\n\n\nTitle\n\n\nAuthor\n\n\n\n\n\n\nLet’s Git going\n\n\nDavid Schoch\n\n\n\n\n\n\nNo matching items"
  }
]